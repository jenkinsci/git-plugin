<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">

    <script><![CDATA[
    function encodeAllInputs(sep, form, field) {
        var inputs = Form.getInputs(form, null, field);
        if (inputs.length == 0)
            return "";

        var rv = sep;
        for (var i = 0; i < inputs.length; ++i) {
            if (i != 0)
                rv += "&";
            rv += field+"="+encode(inputs[i].value);
        }
        return rv;
    }
    ]]></script>

    <f:entry title="Repositories" help="/plugin/git/repositories.html">
      <f:repeatable name="repo" field="userRemoteConfigs" minimum="1" noAddButton="false">
        <table width="100%">

          <f:entry title="${%Repository URL}" field="url">
            <f:textbox/>
          </f:entry>

          <f:entry title="${%Credentials}" field="credentialsId">
            <f:select default="" field="credentialsId"
                      onchange="{ // workaround for JENKINS-19124
                                    var self = this.targetElement ? this.targetElement : this;
                                    var r = findPreviousFormItem(self,'url');
                                    r.onchange(r);
                                    self = null;
                                    r = null;
                                 }"/>
          </f:entry>

          <f:advanced>

            <f:entry title="${%Name}" field="name">
              <f:textbox/>
            </f:entry>

            <f:entry title="${%Refspec}" field="refspec">
              <f:textbox/>
            </f:entry>

          </f:advanced>

          <f:entry>
            <div align="right">
              <input type="button" value="Delete Repository" class="repeatable-delete" style="margin-left: 1em;"/>
            </div>
          </f:entry>
        </table>

      </f:repeatable>
    </f:entry>

  <f:entry title="Branches to build" help="/plugin/git/branches.html">
  <f:repeatable var="branch" name="branches" varStatus="branchStatus" items="${instance.branches}" minimum="1" noAddButton="false">
           <table width="100%">
               <f:entry title="Branch Specifier (blank for default):" field="name">
                    <f:textbox value="${branch.name}" />
               </f:entry>

               <f:entry>
            <div align="right">
                <input type="button" value="Delete Branch" class="repeatable-delete" style="margin-left: 1em;" />
            </div>
          </f:entry>

           </table>

        </f:repeatable>

  </f:entry>

  <f:advanced>
    <f:entry title="${%Included Regions}" field="includedRegions">
        <f:textarea />
    </f:entry>
    <f:entry title="${%Excluded Regions}" field="excludedRegions">
        <f:textarea />
    </f:entry>
    <f:entry title="${%Excluded Users}" field="excludedUsers">
        <f:textarea />
    </f:entry>
    <f:entry title="Checkout/merge to local branch (optional)" field="localBranch">
      <f:textbox />
    </f:entry>
    <f:entry title="Local subdirectory for repo (optional)" field="relativeTargetDir">
      <f:textbox />
    </f:entry>
    <f:entry title="Path of the reference repo to use during clone (optional)" field="reference">
      <f:textbox/>
    </f:entry>
   <f:entry title="Unique SCM name (optional)" field="scmName">
        <f:textbox />
   </f:entry>
    <f:entry title="Config user.name Value" field="gitConfigName">
      <f:textbox />
    </f:entry>
    <f:entry title="Config user.email Value" field="gitConfigEmail">
      <f:textbox />
    </f:entry>

    <!-- This needs more thought
  <f:entry title="Autogenerate submodule configurations">
    <f:checkbox name="git.generate" checked="${scm.doGenerate}"/>
    <label class="attach-previous">Generate submodule configurations</label>

    <f:repeatable var="smcfg" name="smcfg" varStatus="cfgStatus" items="${scm.submoduleCfg}" noAddButton="false">
           <table width="100%">
           <f:entry title="Name of submodule">
             <f:textbox name="git.submodule.name" value="${smcfg.submoduleName}" />
           </f:entry>

           <f:entry title="Matching Branches">
            <f:textbox name="git.submodule.match" value="${smcfg.branchesString}" />
           </f:entry>


           <f:entry>
            <div align="right">
                <input type="button" value="Delete" class="repeatable-delete" style="margin-left: 1em;" />
            </div>
          </f:entry>
          </table>

        </f:repeatable>

  </f:entry>
     -->

    <f:entry title="Merge options">
      <table width="100%">
        <f:optionalProperty title="${%Merge before build}" field="userMergeOptions" />
      </table>
    </f:entry>

    <f:entry title="Prune remote branches before build" field="pruneBranches">
      <f:checkbox/>
    </f:entry>

    <f:entry title="Skip internal tag" field="skipTag">
      <f:checkbox />
    </f:entry>
    <f:entry title="Clean after checkout" field="clean">
      <f:checkbox />
    </f:entry>
    <f:entry title="Fast remote polling" field="remotePoll">
      <f:checkbox/>
    </f:entry>
    <f:entry title="Disable submodules processing" field="disableSubmodules">
      <f:checkbox />
    </f:entry>
    <f:entry title="Recursively update submodules" field="recursiveSubmodules">
      <f:checkbox />
    </f:entry>
    <f:entry title="Use commit author in changelog" field="authorOrCommitter">
      <f:checkbox />
    </f:entry>
    <f:entry title="Wipe out workspace before build" field="wipeOutWorkspace">
      <f:checkbox />
    </f:entry>
    <f:entry title="Ignore this repository during notify commit" field="ignoreNotifyCommit">
      <f:checkbox/>
    </f:entry>
    <!-- TODO move to appropriate location if necessary -->
    <f:entry title="Use shallow clone" field="useShallowClone">
      <f:checkbox/>
    </f:entry>

    <f:dropdownList name="buildChooser" title="${%Choosing strategy}">
      <j:scope>
        <j:set var="current" value="${instance.buildChooser}"/>
        <j:forEach var="descriptor" items="${descriptor.getBuildChooserDescriptors(it)}">
          <f:dropdownListBlock value="${descriptor.clazz.name}" title="${descriptor.displayName}"
            selected="${current.descriptor==descriptor or (current==null and descriptor.displayName=='Default')}">
            <j:set var="instance" value="${current.descriptor==descriptor ? current : null}" />
            <tr><td>
              <input type="hidden" name="stapler-class" value="${descriptor.clazz.name}" />
            </td></tr>
            <st:include from="${descriptor}" page="${descriptor.configPage}" optional="true"/>
          </f:dropdownListBlock>
        </j:forEach>
      </j:scope>
    </f:dropdownList>

      <f:entry title="Git executable" field="gitTool">
          <select name="gitTool">
              <j:forEach var="gitTool" items="${descriptor.gitTools}" varStatus="current">
                  <j:choose>
                      <j:when test="${instance.gitTool==gitTool.name}">
                          <option value="${gitTool.name}" selected="SELECTED">${gitTool.name}</option>
                      </j:when>
                      <j:otherwise>
                          <option value="${gitTool.name}">${gitTool.name}</option>
                      </j:otherwise>
                  </j:choose>
              </j:forEach>
          </select>
      </f:entry>
  </f:advanced>

  <t:listScmBrowsers name="git.browser" />
</j:jelly>
