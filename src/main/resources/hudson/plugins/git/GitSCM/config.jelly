<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  
    <script><![CDATA[
    function encodeAllInputs(sep, form, field) {
        var inputs = Form.getInputs(form, null, field);
        if (inputs.length == 0)
            return "";

        var rv = sep;
        for (var i = 0; i < inputs.length; ++i) {
            if (i != 0)
                rv += "&";
            rv += field+"="+encode(inputs[i].value);
        }
        return rv;
    }
    ]]></script>

    <f:entry title="Repositories" help="/plugin/git/help.html">
        
        <f:repeatable var="repo" name="repo" varStatus="repoStatus" items="${scm.repositories}" minimum="1" noAddButton="false">
           <table width="100%">
           
           <f:entry title="URL of repository">
            <f:textbox name="git.repo.url" value="${repo.URIs.get(0).toPrivateString()}" />
           </f:entry>
           
           <f:advanced>
           
	           <f:entry title="Name of repository (blank to create default)">
	             <f:textbox name="git.repo.name" value="${repo.name}" />
	           </f:entry>
	           
	           
	           <f:entry title="Refspec (blank to create default)">
	              <f:textbox name="git.repo.refspec" value="${repo.fetchRefSpecs.get(0)}" />
	           </f:entry>
	           
           </f:advanced>
           
           <f:entry>
            <div align="right">
                <input type="button" value="Delete Repository" class="repeatable-delete" style="margin-left: 1em;" />
            </div>
          </f:entry>
          </table>
          
        </f:repeatable>
   </f:entry>
  
  <f:entry title="Branches to build" help="/plugin/git/branch.html">
  <f:repeatable var="branch" name="branch" varStatus="branchStatus" items="${scm.branches}" minimum="1" noAddButton="false">
           <table width="100%">
               <f:entry title="Branch Specifier (blank for default):">
                    <f:textbox name="git.branch" value="${branch.name}" />
               </f:entry>
               
               <f:entry>
            <div align="right">
                <input type="button" value="Delete Branch" class="repeatable-delete" style="margin-left: 1em;" />
            </div>
          </f:entry>
               
           </table>
          
        </f:repeatable>
  
  </f:entry>

  <f:advanced>
    <f:entry title="${%Excluded Regions}" help="/plugin/git/help-excludedRegions.html">
        <f:textarea name="git.excludedRegions" value="${scm.excludedRegions}" />
    </f:entry>
    <f:entry title="${%Excluded Users}" help="/plugin/git/help-excludedUsers.html">
        <f:textarea name="git.excludedUsers" value="${scm.excludedUsers}" />
    </f:entry>
    <f:entry title="Checkout/merge to local branch (optional)" help="/plugin/git/help-localBranch.html">
      <f:textbox name="git.localBranch" value="${scm.localBranch}" />
    </f:entry>
    <f:entry title="Local subdirectory for repo (optional)" help="/plugin/git/help-local.html">
      <f:textbox name="git.relativeTargetDir" value="${scm.relativeTargetDir}" />
    </f:entry>
    <f:entry title="Config user.name Value" field="gitConfigName">
      <f:textbox />
    </f:entry>
    <f:entry title="Config user.email Value" field="gitConfigEmail">
      <f:textbox />
    </f:entry>
    
    <!-- This needs more thought
  <f:entry title="Autogenerate submodule configurations">
    <f:checkbox name="git.generate" checked="${scm.doGenerate}"/>
    <label class="attach-previous">Generate submodule configurations</label>
    
    <f:repeatable var="smcfg" name="smcfg" varStatus="cfgStatus" items="${scm.submoduleCfg}" noAddButton="false">
           <table width="100%">
           <f:entry title="Name of submodule">
             <f:textbox name="git.submodule.name" value="${smcfg.submoduleName}" />
           </f:entry>
           
           <f:entry title="Matching Branches">
            <f:textbox name="git.submodule.match" value="${smcfg.branchesString}" />
           </f:entry>
           
          
           <f:entry>
            <div align="right">
                <input type="button" value="Delete" class="repeatable-delete" style="margin-left: 1em;" />
            </div>
          </f:entry>
          </table>
          
        </f:repeatable>
    
  </f:entry>
     -->
     
	  <f:entry title="Merge options" help="/plugin/git/merge.html">
	  	
		<table width="100%">
		<f:optionalBlock name="git.doMerge"
		                 title="${%Merge before build}"
		                 checked="${scm.mergeOptions.doMerge()}">
		 <f:entry title="Name of repository: (default first specified, e.g. origin)">
		  <f:textbox id="git.mergeRemote" name="git.mergeRemote" value="${scm.mergeOptions.mergeRemote.name}"
		             checkUrl="'${rootURL}/scm/GitSCM/gitRemoteNameCheck?isMerge=true&amp;value='+escape(this.value)
		                      +encodeAllInputs('&amp;', this.form, 'git.repo.name')
		                      +encodeAllInputs('&amp;', this.form, 'git.repo.url')"/>
		 </f:entry>
		 <f:entry title="Branch to merge to: (e.g. master)">
		  <f:textbox id="git.mergeTarget" name="git.mergeTarget" value="${scm.mergeOptions.mergeTarget}" clazz="required"/>
		 </f:entry>
		</f:optionalBlock>
		</table>
	  	
	  </f:entry>

          <f:entry title="Prune remote branches before build" help="/plugin/git/prune.html">
            <f:checkbox name="git.pruneBranches" checked="${scm.pruneBranches}" />
          </f:entry>

    <f:entry title="Skip internal tag" help="/plugin/git/help-skipTag.html">
      <f:checkbox name="git.skipTag" checked="${scm.skipTag}" />
    </f:entry>
    <f:entry title="Clean after checkout" help="/plugin/git/clean.html">
      <f:checkbox name="git.clean" checked="${scm.clean}" />
    </f:entry>
    <f:entry title="Recursively update submodules" help="/plugin/git/help-recursiveSubmodules.html">
      <f:checkbox name="git.recursiveSubmodules" checked="${scm.recursiveSubmodules}" />
    </f:entry>
    <f:entry title="Use commit author in changelog" help="/plugin/git/help-authorCommitter.html">
      <f:checkbox name="git.authorOrCommitter" checked="${scm.authorOrCommitter}"/>
    </f:entry>
    <f:dropdownList name="buildChooser" title="${%Choosing strategy}" help="/plugin/git/choosingStrategy.html">
      <j:scope>
        <j:set var="current" value="${instance.buildChooser}"/>
        <j:forEach var="descriptor" items="${descriptor.buildChooserDescriptors}">
          <f:dropdownListBlock value="${descriptor.clazz.name}" title="${descriptor.displayName}"
            selected="${current.descriptor==descriptor or (current==null and descriptor.displayName=='Default')}">
            <j:set var="instance" value="${current.descriptor==descriptor ? current : null}" />
            <tr><td>
              <input type="hidden" name="stapler-class" value="${descriptor.clazz.name}" />
            </td></tr>
            <st:include from="${descriptor}" page="${descriptor.configPage}" optional="true"/>
          </f:dropdownListBlock>
        </j:forEach>
      </j:scope>
    </f:dropdownList>

      <f:entry title="Git executable" field="git.gitTool">
          <select name="git.gitTool">
              <j:forEach var="gitTool" items="${descriptor.gitTools}" varStatus="current">
                  <j:choose>
                      <j:when test="${scm.gitTool==gitTool.name}">
                          <option value="${gitTool.name}" selected="SELECTED">${gitTool.name}</option>
                      </j:when>
                      <j:otherwise>
                          <option value="${gitTool.name}">${gitTool.name}</option>
                      </j:otherwise>
                  </j:choose>
              </j:forEach>
          </select>
      </f:entry>
  </f:advanced>
  
  <t:listScmBrowsers name="git.browser" />
</j:jelly>
